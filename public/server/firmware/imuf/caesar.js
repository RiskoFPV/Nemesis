//caesarThing from imuf bootloader.c code
const caesarThing = [
  155,
  225,
  248,
  242,
  93,
  127,
  22,
  172,
  177,
  201,
  108,
  8,
  132,
  254,
  197,
  49,
  216,
  169,
  32,
  151,
  217,
  202,
  122,
  227,
  86,
  17,
  165,
  226,
  222,
  82,
  252,
  168,
  212,
  95,
  25,
  239,
  113,
  88,
  0,
  100,
  215,
  71,
  115,
  80,
  149,
  3,
  39,
  193,
  180,
  57,
  195,
  145,
  77,
  27,
  48,
  157,
  247,
  118,
  16,
  159,
  33,
  51,
  220,
  111,
  253,
  154,
  147,
  166,
  229,
  85,
  150,
  187,
  5,
  56,
  137,
  199,
  241,
  34,
  156,
  218,
  65,
  14,
  249,
  181,
  54,
  66,
  203,
  12,
  4,
  143,
  142,
  13,
  234,
  191,
  255,
  130,
  41,
  246,
  171,
  102,
  152,
  84,
  179,
  63,
  103,
  35,
  74,
  104,
  114,
  112,
  237,
  91,
  134,
  213,
  167,
  178,
  126,
  23,
  141,
  182,
  90,
  174,
  211,
  129,
  121,
  117,
  232,
  99,
  176,
  7,
  205,
  94,
  38,
  24,
  161,
  10,
  120,
  59,
  18,
  58,
  98,
  244,
  245,
  238,
  45,
  55,
  209,
  101,
  47,
  208,
  230,
  163,
  107,
  72,
  175,
  148,
  144,
  186,
  11,
  123,
  46,
  192,
  36,
  128,
  40,
  250,
  140,
  105,
  125,
  43,
  164,
  81,
  78,
  233,
  68,
  44,
  133,
  42,
  109,
  139,
  87,
  119,
  15,
  106,
  31,
  69,
  194,
  231,
  236,
  153,
  240,
  184,
  116,
  73,
  96,
  70,
  223,
  97,
  251,
  228,
  52,
  75,
  224,
  50,
  190,
  19,
  210,
  160,
  30,
  26,
  131,
  221,
  170,
  92,
  110,
  89,
  198,
  79,
  76,
  1,
  196,
  21,
  62,
  67,
  136,
  146,
  135,
  53,
  189,
  28,
  158,
  83,
  214,
  138,
  188,
  162,
  60,
  183,
  200,
  6,
  124,
  20,
  185,
  64,
  207,
  173,
  9,
  204,
  235,
  37,
  243,
  206,
  219,
  29,
  2,
  61
];

//convert decimal to hex
const numHex = s => {
  var a = s.toString(16);
  if (a.length % 2 > 0) {
    a = "0" + a;
  }
  return a;
};

//caesar encrypt a byte -- finds decimal byte in caesar table and returns position. that is the decimal byte after caesar.
const caesarByte = hexByteStr => {
  var decimalByte = parseInt("0x" + hexByteStr);
  for (var i = 0; i <= 255; i++) {
    if (caesarThing[i] == decimalByte) {
      return numHex(i);
    }
  }
};

module.exports = new class {
  //caesar encrypt imuf binary string byte-by-byte
  caesarBin(binAsStr) {
    let caesarBin = "";
    for (var i = 0; i < binAsStr.length; i += 2) {
      var hexByteStr = binAsStr.slice(i, i + 2);
      var convertedByte = caesarByte(hexByteStr);
      caesarBin += convertedByte;
    }
    return caesarBin;
  }
}();
